#Server props
#spring.data.rest.baseUri = /tacocloud
#server.servlet.context-path=/tacocloud
#REST Auto API base path, not to collide with controllers
#spring.data.rest.base-path=/tacocloud/spring/rest
    #Starts on random port 0
server.port=8081


#Postres DB
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#Turn off the hibernate auto-creation of the tables from the entity objects
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.show-sql=true
spring.datasource.url=jdbc:postgresql://localhost:5432/taco_cloud
spring.datasource.username=postgres
spring.datasource.password=Ka$ing
spring.datasource.driverClassName=org.postgresql.Driver
#Initialization of the database on every startup
#spring.datasource.initialization-mode=always
#spring.datasource.initialize=true
#spring.datasource.schema=classpath:/schema.sql
#Continue application startup in spite of any errors in data initialization
#spring.datasource.continue-on-error=true

#DEBUGGING
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE


#logging.level.root=WARN
#logging.level.org.springframework.security=DEBUG
#logging.file=application.txt
#logging.path=D:/logs/logfile.txt

#custom properties
taco.orders.pageSize=20

# *** ActiveMQ Artemis broker for JMS
spring.artemis.host=artemis.tacocloud.com
spring.artemis.port=61617
spring.artemis.user=tacoweb
spring.artemis.password=tacoweb
spring.jms.template.default-destination=tacocloud.order.queue

# *** RabbitMQ
#A comma-separated list of RabbitMQ broker addresses
#spring.rabbitmq.addresses=
# default localhost
spring.rabbitmq.host=rabbit.tacocloud.com
# The broker’s port (defaults to 5672)
spring.rabbitmq.port=5672
spring.rabbitmq.username=tacoweb
spring.rabbitmq.password=13tm31n

spring.rabbitmq.template.exchange=tacocloud.orders
spring.rabbitmq.template.routing-key=kitchens.central
spring.rabbitmq.template.receive-timeout=30000

# *** Kafka
#default
spring.kafka.bootstrap-servers=9092
spring.kafka.template.default-topic=tacocloud.orders.topic